{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Try Catch":
	{
		"scope" : "python",
		"prefix": "_try",
		"body":
		[
			"try:",
			"\t${TM_SELECTED_TEXT}",
			"except Exception as e:",
			"\t$0"
		],
		"description": "Coloca o try except entorno da seleção, necessario o uso do comando insert snippet pra funcionar (Ctrl+Shift+P)"
	},
	"Try Pass":
	{
		"scope" : "python",
		"prefix": "_ptry",
		"body":
		[
			"try:",
			"\t${TM_SELECTED_TEXT}",
			"except:",
			"\tpass$0"
		],
		"description": "Coloca o try except com pass entorno da seleção, necessario o uso do comando insert snippet pra funcionar (Ctrl+Shift+P)"
	},
	"Error print":
	{
		"scope" : "python",
		"prefix": "_errp",
		"body":
		[
			"print(\"Erro:\", str(e), \"\\nFunção: ${1:funcao}\\nCódigo: ${TM_FILENAME}\")"
		],
		"description": "Printa o erro do try except com facilidade pra especificar a função e o codigo"
	}
}